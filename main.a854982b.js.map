{"version":3,"sources":["scripts/main.js"],"names":["div","document","createElement","waitFor","element","eventName","waitPromise","Promise","resolve","addEventListener","nodeName","id","className","body","append","printMessage","message","p","innerText","module","exports"],"mappings":";AAAA,aAEA,IAAMA,EAAMC,SAASC,cAAc,OAKnC,SAASC,EAAQC,EAASC,GAUjBC,OATa,IAAIC,QAAQ,SAAAC,GAAW,MAAA,CACzCJ,EAAQK,iBAAiBJ,EAAW,WAClCG,EACE,UAAUH,OAAAA,EACLD,oBAAAA,GAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GAFjC,WANbX,EAAIY,UAAY,YAChBX,SAASY,KAAKC,OAAOd,GAerB,IAAMe,EAAe,SAACC,GACdC,IAAAA,EAAIhB,SAASC,cAAc,KAEjCe,EAAEC,UAAYF,EACdC,EAAEL,UAAY,UAEdZ,EAAIc,OAAOG,IAGbE,OAAOC,QAAU,CACfjB,QAAAA,EACAY,aAAAA","file":"main.a854982b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst div = document.createElement('div');\n\ndiv.className = 'container';\ndocument.body.append(div);\n\nfunction waitFor(element, eventName) {\n  const waitPromise = new Promise(resolve => [\n    element.addEventListener(eventName, () => {\n      resolve(\n        `It was ${eventName} on the element:`\n        + `${element.nodeName}, id: ${element.id}.`\n      );\n    }),\n  ]);\n\n  return waitPromise;\n}\n\nconst printMessage = (message) => {\n  const p = document.createElement('p');\n\n  p.innerText = message;\n  p.className = 'message';\n\n  div.append(p);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}